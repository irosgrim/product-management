version: '3'

services:

    reverse-proxy:
        image: reverse-proxy
        container_name: reverse-proxy
        build:
            context: ./services/reverse-proxy
        depends_on:
            - product-management-client
            - product-management-server
        ports:
            - 80:80
        restart: always

    product-management-client:
        image: product-management-client
        container_name: product-management-client
        build:
            context: ./services/client
        volumes:
            - ./services/client/dist:/usr/src/app/www
        ports:
            - 8080:80
        restart: on-failure

    product-management-server:
        image: product-management-server
        container_name: product-management-server
        build:
            context: ./services/server
        ports:
            - 3000:3000
        environment:
            - DB_TYPE=fake
        restart: on-failure

    # example setup
    # logger:
    #     image: logger
    #     container_name: logger
    #     build:
    #         context: ./services/logger
    #     ports:
    #         - 3000:3000
    #     restart: on-failure

    # database:
    #     image: database
    #     container_name: database
    #     build:
    #         context: ./services/database
    #     
    #     ports:
    #         - 3001:3000
    #     restart: on-failure